from pwn import *


def chunks(l, n):
    """Yield successive n-sized chunks from l."""
    for i in range(0, len(l), n):
        yield l[i:i + n]


def attempt(data):
    p = remote("localhost", 4003)
    p.recvuntil("Password: ")
    p.recvuntil("Password: ")
    p.sendline(data.encode("hex"))
    p.recvuntil("How many times do you want to test: ")
    p.sendline("1")
    p.recvuntil("Request completed in: ")
    timing = float(p.recvuntil("s")[:-1])
    missing = int(p.recvall().strip()[1:-1])
    p.close()
    return (timing, missing)


def main():
    current = []
    for _ in range(304):
        results = {}
        for i in [0, 1]:
            cu = current + [i]
            cu += [0] * (8 * (len(cu) % 8))
            va = "".join((map(str, cu)))
            st = ""
            for j in chunks(va, 8):
                st += chr(int(j, 2))
            results[i] = attempt(st)
        if results[0][1] < results[1][1]:
            current.append(0)
        else:
            current.append(1)

    cu = current
    cu += [0] * (8 * (len(cu) % 8))
    va = "".join((map(str, cu)))
    st = ""
    for j in chunks(va, 8):
        st += chr(int(j, 2))

    log.success("Flag: %s" % st)


if __name__ == "__main__":
    main()
